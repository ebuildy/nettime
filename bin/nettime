#!/usr/bin/env node

'use strict'

const commander = require('commander')
const nettime = require('..')
const pkg = require('../package.json')
const print = require('../lib/printer')
const readlineSync = require('readline-sync')

function collect (value, result) {
  result.push(value)
  return result
}

commander.version(pkg.version)
         .description(pkg.description)
         .usage('[options] <URL>')
         .option('-e, --ignore-certificate', 'ignore certificate errors')
         .option('-d, --data <data>', 'data to be sent using the POST verb')
         .option('-f, --format <format>', 'set output format: text, json')
         .option('-H, --header <header>', 'send specific HTTP header', collect, [])
         .option('-i, --include', 'include response headers in the output file')
         .option('-I, --head', 'use HEAD verb to show document info only')
         .option('-o, --output <file>', 'write the received data to a file')
         .option('-u, --unit <unit>', 'set time unit: ms, s+ns')
         .option('-U, --user <credentials>', 'credentials for Basic Authentication')
         .option('-X, --request <verb>', 'specify HTTP verb to use for the request')

commander.on('--help', function () {
  console.log()
  console.log('  The default output format is "text" and time unit "ms".')
  console.log('  Options "HiIXdoU" are the same as "HiIXdou" for curl.')
  console.log('  Timings are printed to the standard output.')
  console.log()
  console.log('  Examples:')
  console.log()
  console.log('    $ nettime https://www.google.com')
  console.log('    $ nettime -f json https://www.github.com')
})

commander.parse(process.argv)
const url = commander.args[0]
if (!url) {
  commander.help()
}

const headers = commander.header.reduce(function (result, header) {
  const colon = header.indexOf(':')
  if (colon > 0) {
    result[header.substr(0, colon).trim().toLowerCase()] = header.substr(colon + 1).trim()
  }
  return result
}, {})

let credentials = commander.user
if (credentials) {
  let colon = credentials.indexOf(':')
  let username, password
  if (colon > 0) {
    username = credentials.substr(0, colon)
    password = credentials.substr(colon + 1)
  } else {
    username = credentials
    password = readlineSync.question('Password: ', {
      hideEchoBack: true
    })
  }
  credentials = {
    username: username,
    password: password
  }
}

nettime({
  url: url,
  data: commander.data,
  method: commander.request || (commander.head ? 'HEAD'
    : commander.data ? 'POST' : 'GET'),
  headers: headers,
  credentials: credentials,
  outputFile: commander.output,
  includeHeaders: commander.include,
  rejectUnauthorized: !commander.ignoreCertificate
})
  .then(function (result) {
    const unit = commander.unit
    if (commander.format === 'json') {
      if (unit !== 's+ns') {
        convertToMilliseconds(result.timings)
      }
      console.log(result)
    } else {
      print(result.timings, unit)
      console.log('Response: HTTP/' + result.httpVersion, result.statusCode,
        result.statusMessage)
    }
  })
  .catch(function (error) {
    console.error(error.message)
    process.exitCode = 1
  })

function convertToMilliseconds (timings) {
  const getMilliseconds = nettime.getMilliseconds
  for (let timing in timings) {
    timings[timing] = getMilliseconds(timings[timing])
  }
}
